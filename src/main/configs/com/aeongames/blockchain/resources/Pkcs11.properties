# 
#   Copyright \u00a9 2019 Eduardo Vindas Cordoba. All rights reserved.
#  
#   THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
#   IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
#   FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
#   AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
#   LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
#   OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
#   THE SOFTWARE.
# 
#pathname of PKCS#11 implementation 	This is the full pathname (including extension) of the PKCS#11 implementation; the format of the pathname is platform dependent. For example, /opt/foo/lib/libpkcs11.so might be the pathname of a PKCS#11 implementation on Solaris and Linux while C:\foo\mypkcs11.dll might be the pathname on Windows.
#library hopefully will be always here otherwise is to the user to update this shit.
filter = .*(Athena|PC/SC card|Alcor Micro).*
library = C\:\\Windows\\System32\\asepkcs.dll
# name suffix of this provider instance This string is concatenated with the prefix
# SunPKCS11- to produce this provider instance's name (that is, the string returned by its Provider.getName() method)
# For example, if the name attribute is "FooAccelerator", then the provider instance's name will be "SunPKCS11-FooAccelerator".
name = CRsignature
#this string will be returned by the provider instance's Provider.getInfo() method. If none is specified, a default description will be returned.
description = Athena Smartcard pkcs loader to the Sun Driver to use on Java.
#the Card Slot
slot=0
attributes = compatibility
