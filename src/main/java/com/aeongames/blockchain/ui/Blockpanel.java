/*
 * 
 *   Copyright © 2019 Eduardo Vindas Cordoba. All rights reserved.
 *  
 *   THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *   IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *   FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 *   AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 *   LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 *   OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
 *   THE SOFTWARE.
 * 
 */
package com.aeongames.blockchain.ui;

import com.aeongames.blockchain.base.Block;
import com.aeongames.blockchain.base.common.ByteUtils;
import java.nio.ByteBuffer;
import java.time.Instant;
import java.time.LocalDateTime;
import java.time.ZoneId;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.text.BadLocationException;

/**
 *
 * @author Eduardo <cartman@aeongames.com>
 */
public class Blockpanel extends javax.swing.JPanel {

    /**
     * Creates new form Block
     */
    public Blockpanel() {
        initComponents();
    }
    
    public Blockpanel(Block bls) {
        initComponents();
        setBlock(bls);
    }

    public void setBlock(Block bls) {
        this.txtblockname.setText(txtblockname.getText() + "" + bls.getIndex().toString());
        this.txtblockhash.setText(bls.getHash().toString());
        for (ByteBuffer byteBuffer : bls.getBlockAuthoritativeSignature()) {
            try {
                if (!txtauthsigns.getText().trim().isEmpty()) {
                    txtauthsigns.getDocument().insertString(txtauthsigns.getDocument().getLength(), " :: ", null);
                }
                txtauthsigns.getDocument().insertString(txtauthsigns.getDocument().getLength(), ByteUtils.ByteArrayToString(byteBuffer), null);

            } catch (BadLocationException ex) {
                //remove after tests. 
                Logger.getLogger(Blockpanel.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        bls.getBlockTransactions().forEach(transaction -> {
            transactions.add(new TransactionMin(transaction));
        });
        //change to a more "acceptable" format
        txtdate.setText(LocalDateTime.ofInstant(Instant.ofEpochMilli(bls.getTimeStamp()), ZoneId.of("UTC")).toString());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        translucentpanel1 = new com.aeongames.edi.utils.visual.translucentpanel();
        jPanel1 = new javax.swing.JPanel();
        txtblockname = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        txtblockhash = new com.aeongames.edi.utils.visual.translucenttextfield();
        jScrollPane1 = new javax.swing.JScrollPane();
        transactions = new com.aeongames.blockchain.ui.neatScrollPanel();
        jLabel1 = new javax.swing.JLabel();
        txtauthsigns = new com.aeongames.edi.utils.visual.translucenttextfield();
        jLabel3 = new javax.swing.JLabel();
        txtdate = new com.aeongames.edi.utils.visual.translucenttextfield();

        setOpaque(false);

        jPanel1.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel1.setOpaque(false);

        txtblockname.setText("Block Data");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(txtblockname, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addComponent(txtblockname)
                .addGap(5, 5, 5))
        );

        jLabel2.setText("Block Hash:");

        txtblockhash.setEditable(false);

        jScrollPane1.setOpaque(false);
        jScrollPane1.getViewport().setOpaque(false);

        transactions.setLayout(new javax.swing.BoxLayout(transactions, javax.swing.BoxLayout.PAGE_AXIS));
        jScrollPane1.setViewportView(transactions);

        jLabel1.setText("Auth Seal:");

        txtauthsigns.setEditable(false);

        jLabel3.setText("Stampted:");

        txtdate.setEditable(false);

        javax.swing.GroupLayout translucentpanel1Layout = new javax.swing.GroupLayout(translucentpanel1);
        translucentpanel1.setLayout(translucentpanel1Layout);
        translucentpanel1Layout.setHorizontalGroup(
            translucentpanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jScrollPane1)
            .addGroup(translucentpanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(translucentpanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(translucentpanel1Layout.createSequentialGroup()
                        .addGroup(translucentpanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel1))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(translucentpanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtblockhash, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(txtauthsigns, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(translucentpanel1Layout.createSequentialGroup()
                        .addComponent(jLabel3)
                        .addGap(9, 9, 9)
                        .addComponent(txtdate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addContainerGap())
        );
        translucentpanel1Layout.setVerticalGroup(
            translucentpanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(translucentpanel1Layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(translucentpanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(txtblockhash, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(translucentpanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(txtauthsigns, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(translucentpanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(txtdate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 78, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(translucentpanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(translucentpanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
    }// </editor-fold>//GEN-END:initComponents


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private com.aeongames.blockchain.ui.neatScrollPanel transactions;
    private com.aeongames.edi.utils.visual.translucentpanel translucentpanel1;
    private com.aeongames.edi.utils.visual.translucenttextfield txtauthsigns;
    private com.aeongames.edi.utils.visual.translucenttextfield txtblockhash;
    private javax.swing.JLabel txtblockname;
    private com.aeongames.edi.utils.visual.translucenttextfield txtdate;
    // End of variables declaration//GEN-END:variables
}
